/*
 * Copyright 2017-2020 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */

apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply from: rootProject.file("gradle/native-targets.gradle")
apply from: rootProject.file("gradle/configure-source-sets.gradle")

kotlin {

    sourceSets {
        commonMain {
            dependencies {
                api project(":kotlinx-serialization-core")
            }
        }

        jvmTest {
            dependencies {
                implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            }
        }
    }

    jvm {
        // Exclude folder with inline classes tests when legacy JVM compiler is used
        configure([compilations.test]) {
            compileKotlinTaskProvider.configure {
                def canSupportInlineClasses = rootProject.ext.jvm_ir_enabled || project.ext.ideaActive
                if (!canSupportInlineClasses) {
                    exclude '**/kotlinx/serialization/features/inline/**'
                }
            }
        }
    }
}

// TODO: these tests are failing on JVM IR
if (rootProject.ext.jvm_ir_enabled) {
    jvmTest {
        filter {
            excludeTest('kotlinx.serialization.json.JsonGenericTest', 'testRecursiveArrays')
            excludeTest('kotlinx.serialization.features.InheritanceTest', 'canBeSerializedAsDerived')
            excludeTest('kotlinx.serialization.features.InternalInheritanceTest', 'testEncodeToString')
            excludeTest('kotlinx.serialization.SerializerForNullableJavaTypeTest', 'testMixedList')
        }
    }
}
