buildscript {
    ext.snapshot_version = '1.1-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$snapshot_version"
        classpath "org.jetbrains.kotlinx:kotlinx-serialization:$snapshot_version"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.2'
    }
}

group 'org.jetbrains.kotlinx'
version "$snapshot_version"

apply plugin: 'kotlin'
apply plugin: 'kotlin-serialization'

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'maven-publish'

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java


            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

apply plugin: 'com.google.protobuf'

protobuf {
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
}

test {
    dependsOn 'generateTestProto'
}

clean {
    delete protobuf.generatedFilesBaseDir
}

sourceSets {
    test {
        java {
            srcDirs += file("${protobuf.generatedFilesBaseDir}/test/java")
        }
    }
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:${snapshot_version}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${snapshot_version}"

    testCompile group: 'junit', name: 'junit', version: '4.4'
    testCompile 'io.kotlintest:kotlintest:2.0.4'

    testCompile 'com.google.protobuf:protobuf-java:3.0.0'
    testCompile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.9'
    testCompile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.9'
    testCompile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.8.9'
    testCompile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-cbor', version: '2.8.9'
}